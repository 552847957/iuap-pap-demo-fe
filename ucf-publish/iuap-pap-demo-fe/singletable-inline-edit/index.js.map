{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./ucf-apps/singletable-inline-edit/src/components/SearchArea/index.js","webpack:///./ucf-common/src/components/RowField/SelectField.js","webpack:///./ucf-common/src/components/RowField/YearField.js","webpack:///./ucf-common/src/components/RowField/RefDept.js","webpack:///./ucf-common/src/components/RowField/RefLevel.js","webpack:///./ucf-apps/singletable-inline-edit/src/model.js","webpack:///./ucf-apps/singletable-inline-edit/src/components/IndexView/FactoryComp.js","webpack:///./ucf-apps/singletable-inline-edit/src/components/IndexView/index.js","webpack:///./ucf-apps/singletable-inline-edit/src/service.js","webpack:///./ucf-apps/singletable-inline-edit/src/container.js","webpack:///./ucf-apps/singletable-inline-edit/src/app.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","FormItem","FormList","Item","Option","Select","YearPicker","DatePicker","SearchAreaForm","props","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","search","_this$props","status","validateFields","form","err","values","year","format","dept","JSON","parse","refpk","setState","show","getQuery","reset","resetFields","onClickGo","state","actions","inlineEdit","updateState","rowEditStatus","onClickCancel","type","queryParam","deepClone","pageParams","whereParams","pageIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","iterator","next","done","_step$value","slicedToArray_default","index","condition","includes","loadList","_this$props2","getFieldProps","searchOpen","onCallback","react_default","a","createElement","SearchPanel","intl","size","label","index_es","id","defaultMessage","environment","extends_default","placeholder","formatMessage","initialValue","RefViews","locale","dateLocal","SelectMonth","Alert","context","confirmFn","cancelFn","Component","createForm","injectIntl","propTypes","PropTypes","any","onChange","func","className","string","field","number","message","array","required","bool","onValidate","isFlag","validate","defaultProps","SelectField","handlerChange","flag","descriptor","defineProperty_default","schema","errors","fields","error","nextProps","nextState","_this$state","_this$props3","FieldWrap","YearField","moment","YearField_YearPicker","zhCN","RefDept","_value","pattern","record","deptName","stringify","refname","style","width","RefLevel","levelName","postLevel","_updates","_removes","_adds","_loadList","renderComponentMap","component","TextField","sex","selectList","disabled","serviceYears","NumberField","iconStyle","max","min","step","serviceYearsCompany","month","allowanceType","allowanceStandard","precision","allowanceActual","exdeeds","pickType","remark","date","DateField","valueKey","level","FactoryComp","renderComp","renderMap","Com","comType","_props","_edit","_status","_validate","toFixed","selected","find","item","IndexView","_this2","oldData","column","title","dataIndex","render","text","IndexView_FactoryComp","changeAllData","_sourseData","list","concat","getSelectedDataFunc","selectData","_list","map","freshData","onPageSelect","onDataNumSelect","_getPageParam","getPageParam","pageSize","filterArrayNull","arr","filter","hasCheck","_this2$props","forEach","_checked","newDataTmp","_isNew","_disabled","_flag","code","sexEnumValue","monthEnumValue","allowanceTypeEnumValue","exdeedsEnumValue","pickTypeEnumValue","handlerNew","newData","tmp","objectSpread_default","uuid","grid","resetColumns","unshift","onClickUpdate","editData","onClickDownloadTemplate","open","GROBAL_HTTP_CTX","filterList","newList","_data","isVerifyData","keys","test","onClickSave","asyncToGenerator_default","regenerator_default","mark","_callee","_this2$props2","filterResult","ajaxFun","msg","wrap","_context","prev","t0","adds","abrupt","updates","sent","Info","stop","onClickDelConfirm","_this2$props3","showPop","onClickDel","_callee2","_context2","removes","onClickPopCancel","showPopCancel","resetData","onClickPopUnSaveOK","onClickPopUnSaveCancel","onClickExport","exportExcel","resetTableHeight","isopen","tableHeight","getHeight","_this3","showLoading","totalPages","total","paginationObj","activePage","items","Header","SearchArea","ButtonRoleGroup","funcCode","Button","role","getButtonStatus","colors","onClick","shape","Grid","ref","el","rowKey","columns","columnFilterAble","showHeaderMenu","dragborder","draggable","syncHover","scroll","y","fullScreen","URL","GET_LIST","GET_ADD","GET_UPDATE","GET_DELETE","GET_LIST_BY_COL","GET_TOEXPORTEXCEL","model","webkitURL","initialState","cacheData","tableData","reducers","effects","param","getState","inlineEditState","_param","_processData","res","defState","_state","processData","newParam","assign","request","method","t1","content","totalElements","_x","_x2","arguments","mirState","localeData","_processData2","t2","_x3","_x4","_callee3","_processData3","_context3","_x5","_x6","_callee4","_processData4","_context4","_x7","_x8","mirror","connect","Intl","container","document","querySelector"],"mappings":"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","file":"singletable-inline-edit/index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([2019,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * A2行编辑搜索区域组件\n */\n\n//React所需\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\n//状态管理\nimport { actions } from \"mirrorx\";\n//Tinper-bee组件库\nimport { FormControl, Select } from \"tinper-bee\";\n//表单\nimport FormList from 'components/FormList';\n//日期\nimport DatePicker from \"bee-datepicker\";\n//日期本地化\nimport { dateLocal } from 'components/Intl'\n\n//加载工具类\nimport { deepClone } from \"utils\";\n//部门参照组件\nimport { RefIuapDept } from 'components/RefViews';\n//其他\nimport SearchPanel from 'components/SearchPanel';\nimport SelectMonth from 'components/SelectMonth';\nimport Alert from 'components/Alert';\n\n\n\n//所需变量\nconst FormItem = FormList.Item;\nconst { Option } = Select;\nconst format = \"YYYY\";\nconst { YearPicker } = DatePicker;\n\nclass SearchAreaForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false\n        }\n    }\n\n    /** 执行查询方法回调\n     * @param {array} error 校验是否成功\n     * @param {json} values 表单数据\n     */\n    search = () => {\n        let { status, form: {validateFields} } = this.props;\n\n        validateFields((err, values) => {\n            //针对不同数据进行处理\n            if (values.year) {\n                values.year = values.year.format('YYYY');\n            }\n            if (values.dept) {\n                values.dept = JSON.parse(values.dept).refpk;\n            }\n            //检测是否为编辑查询\n            if (status != 'view') {\n                this.setState({\n                    show: true,\n                    values\n                });\n            } else {\n                this.getQuery(values, 0);\n            }\n        })\n\n    }\n\n    /**\n     * 重置 如果无法清空，请手动清空\n     *\n     */\n    reset = () => {\n        this.props.form.resetFields();\n    }\n\n    /**\n     * 没退出编辑态后的查询确认\n     *\n     */\n    onClickGo = () => {\n        this.getQuery(this.state.values, 0);\n        this.setState({ show: false });\n        actions.inlineEdit.updateState({ status: 'view', rowEditStatus: true });\n    }\n\n    /**\n     * 没退出编辑态后的取消\n     *\n     */\n    onClickCancel = () => {\n        this.setState({ show: false });\n    }\n\n    /**\n     * 获取数据  type值为0查询，1为清空\n     *\n     * @param {array} values 要处理的值\n     * @param {number} type 不同类型\n     */\n    getQuery = (values, type) => {\n        let queryParam = deepClone(this.props.queryParam);\n        let { pageParams, whereParams } = queryParam;\n\n        whereParams = deepClone(whereParams);\n        pageParams.pageIndex = 0;\n        for (let key in values) {\n            for (const [index, elem] of whereParams.entries()) {\n                if (key === elem.key) {\n                    whereParams.splice(index, 1);\n                    break;\n                }\n            }\n            if ((values[key] || values[key] === 0) && type === 0) {\n                let condition = \"LIKE\";\n                // 这里通过根据项目自己优化\n                const equalArray = [\"code\", \"month\"];\n                const greaterThanArray = [\"serviceYearsCompany\"];\n                if (equalArray.includes(key)) { // 等于\n                    condition = \"EQ\";\n                }\n                if (greaterThanArray.includes(key)) { // 大于等于\n                    condition = \"GTEQ\";\n                }\n                whereParams.push({ key, value: values[key], condition }); //前后端约定\n            }\n        }\n\n        queryParam.whereParams = whereParams;\n        if (type === 0) { // 查询\n            actions.inlineEdit.loadList(queryParam);\n        }\n        // actions.inlineEdit.updateState(queryParam);\n\n    }\n\n\n    render() {\n        const { form: { getFieldProps }, searchOpen, onCallback } = this.props;\n        return (\n            <SearchPanel\n                searchOpen={searchOpen}\n                reset={this.reset}\n                onCallback={onCallback}\n                search={this.search}\n                intl={this.props.intl}\n            >\n\n                <FormList size=\"sm\">\n                    <FormItem\n                        label={<FormattedMessage id=\"js.com.Sea2.0001\" defaultMessage=\"员工编号\" />}\n                    >\n                        <FormControl placeholder={this.props.intl.formatMessage({id:\"js.com.Sea2.0002\", defaultMessage:\"精确查询\"})} {...getFieldProps('code', { initialValue: '' })} />\n                    </FormItem>\n\n                    <FormItem\n                        label={<FormattedMessage id=\"js.com.Sea2.0003\" defaultMessage=\"员工姓名\" />}\n                    >\n                        <FormControl placeholder={this.props.intl.formatMessage({id:\"js.com.Sea2.0004\", defaultMessage:\"模糊查询\"})} {...getFieldProps('name', { initialValue: '' })} />\n                    </FormItem>\n\n                    <FormItem\n                        label={<FormattedMessage id=\"js.com.Sea2.0005\" defaultMessage=\"部门\" />}\n                    >\n                        <RefIuapDept {...getFieldProps('dept', { initialValue: '' })} />\n                    </FormItem>\n\n                    <FormItem\n                        label={<FormattedMessage id=\"js.com.Sea2.0006\" defaultMessage=\"年份\" />}\n                    >\n                        <YearPicker\n                            {...getFieldProps('year', { initialValue: null })}\n                            format={format}\n                            locale={dateLocal}\n                            placeholder={this.props.intl.formatMessage({id:\"js.com.Sea2.0007\", defaultMessage:\"选择年\"})}\n                        />\n                    </FormItem>\n\n                    <FormItem\n                        label={<FormattedMessage id=\"js.com.Sea2.0008\" defaultMessage=\"月份\" />}\n                    >\n                        <SelectMonth  {...getFieldProps('month', { initialValue: '' })} />\n                    </FormItem>\n\n                    <FormItem\n                        label={<FormattedMessage id=\"js.com.Sea2.0009\" defaultMessage=\"是否超标\" />}\n                    >\n                        <Select {...getFieldProps('exdeeds', { initialValue: '' })}>\n                            <Option value=\"\"><FormattedMessage id=\"js.com.Sea2.0010\" defaultMessage=\"请选择\" /></Option>\n                            <Option value=\"0\"><FormattedMessage id=\"js.com.Sea2.0011\" defaultMessage=\"未超标\" /></Option>\n                            <Option value=\"1\"><FormattedMessage id=\"js.com.Sea2.0012\" defaultMessage=\"超标\" /></Option>\n                        </Select>\n                    </FormItem>\n                </FormList>\n\n                <Alert show={this.state.show} context=\"数据未保存，确定查询 ?\" confirmFn={this.onClickGo} cancelFn={this.onClickCancel} />\n            </SearchPanel>\n        )\n    }\n}\n\nexport default FormList.createForm()(injectIntl(SearchAreaForm))\n","/**\n * Select (下拉框)\n */\n\n//React导入\nimport { FormattedMessage, defineMessages, injectIntl, intlShape } from 'react-intl';\nimport React, { Component } from 'react';\n//类型校验\nimport PropTypes from 'prop-types';\n//验证组件 https://www.npmjs.com/package/async-validator\nimport schema from 'async-validator';\nimport FieldWrap from './FieldWrap'\n//下拉组件\nimport { Select } from 'tinper-bee'\n\n//自定义样式\nimport './style.less';\n\n//类型校验\nconst propTypes = {\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    className: PropTypes.string,\n    field: PropTypes.string,\n    index: PropTypes.number,\n    message: PropTypes.string,\n    data: PropTypes.array,\n    required: PropTypes.bool,\n    onValidate: PropTypes.func,\n    isFlag: PropTypes.bool,\n    validate: PropTypes.bool,\n};\n\n//默认参数值\nconst defaultProps = {\n    field: '',\n    index: '',\n    message: <FormattedMessage id=\"js.com.Row2.0001\" defaultMessage=\"请选择此字段\" />,\n    data: [],\n    required: false,\n    isFlag: false,\n    validate: false,\n    className: ''\n}\n\nclass SelectField extends Component {\n    /**\n     * Creates an instance of SelectField.\n     * @param {*} props\n     * @memberof SelectField\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.value,//组件的值\n            flag: false,//是否编辑过\n            error: false//校验是否有错误\n        }\n    }\n    /**\n     *  参数发生变化回调\n     *\n     * @param {object} nextProps 即将更新Props\n     * @param {object} nextState 即将更新State\n     * @memberof NumberField\n     */\n    componentWillReceiveProps(nextProps, nextState) {\n        if (nextProps.validate == true) {\n            this.validate();\n        }\n    }\n\n    /**\n     * 有输入值改变的回调\n     *\n     * @param {string} value\n     */\n    handlerChange = (value) => {\n        let { onChange, field, index, status } = this.props;\n        //处理是否有修改状态改变、状态同步之后校验输入是否正确\n        this.setState({ value, flag: status == 'edit' }, () => {\n            this.validate();\n        });\n        //回调外部函数\n        onChange && onChange(field, value, index);\n    }\n    /**\n     * 校验方法\n     *\n     */\n    validate = () => {\n        let { required, field, index, onValidate } = this.props;\n        let { value } = this.state;\n        //设置校验规则\n        let descriptor = {\n            [field]: { type: \"number\", required }\n        }\n        let validator = new schema(descriptor);\n        validator.validate({ [field]: value }, (errors, fields) => {\n            if (errors) {\n                this.setState({\n                    error: true\n                });\n            } else {\n                this.setState({\n                    error: false\n                });\n            }\n            onValidate && onValidate(field, fields, index);\n        });\n    }\n    render() {\n        let { value, error, flag } = this.state;\n\n        let { className, message, required, data } = this.props;\n\n        return (\n            <FieldWrap\n                required={required}\n                error={error}\n                message={message}\n                flag={flag}\n            >\n                <Select\n                    className={className}\n                    value={value}\n                    onChange={this.handlerChange}\n                    data={data}\n                >\n                </Select>\n            </FieldWrap>\n        );\n    }\n}\n\nSelectField.propTypes = propTypes;\nSelectField.defaultProps = defaultProps;\nexport default SelectField;\n","/**\n * YearField (年份选择框)\n */\n\n//React导入\nimport { FormattedMessage, defineMessages, injectIntl, intlShape } from 'react-intl';\nimport React, { Component } from 'react';\n//类型校验\nimport PropTypes from 'prop-types';\n//日期处理\nimport moment from 'moment';\n//验证组件 https://www.npmjs.com/package/async-validator\nimport schema from 'async-validator';\nimport FieldWrap from './FieldWrap'\n//日期组件\nimport DatePicker from 'bee-datepicker';\n//本地化日期\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\n\n//自定义样式\nimport './style.less';\n\n//变量结构\nconst { YearPicker } = DatePicker;\n\n//类型校验\nconst propTypes = {\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    className: PropTypes.string,\n    field: PropTypes.string,\n    index: PropTypes.number,\n    message: PropTypes.string,\n    data: PropTypes.array,\n    required: PropTypes.bool,\n    onValidate: PropTypes.func,\n    isFlag: PropTypes.bool,\n    validate: PropTypes.bool,\n};\n\n//默认参数值\nconst defaultProps = {\n    field: '',\n    index: '',\n    message: <FormattedMessage id=\"js.com.Row1.0001\" defaultMessage=\"请输入此字段\" />,\n    data: [],\n    required: false,\n    isFlag: false,\n    validate: false\n}\n\nclass YearField extends Component {\n    /**\n     * Creates an instance of YearField.\n     * @param {*} props\n     * @memberof YearField\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: moment(props.value),//组件的值\n            flag: false,//是否编辑过\n            error: false//校验是否有错误\n        }\n    }\n    /**\n     *  参数发生变化回调\n     *\n     * @param {object} nextProps 即将更新Props\n     * @param {object} nextState 即将更新State\n     * @memberof NumberField\n     */\n    componentWillReceiveProps(nextProps) {\n        //当校验外部发生变化，主动校验函数\n        if (nextProps.validate == true) {\n            this.validate();\n        }\n    }\n\n    /**\n     * 有输入值改变的回调\n     *\n     * @param {string} value\n     */\n    handlerChange = (value) => {\n        let { onChange, field, index, status } = this.props;\n        //处理是否有修改状态改变、状态同步之后校验输入是否正确\n        this.setState({ value, flag: status == 'edit' }, () => {\n            this.validate();\n        });\n        //回调外部函数\n        onChange && onChange(field, moment(value).format('YYYY'), index);\n    }\n    /**\n     * 校验\n     *\n     */\n    validate = () => {\n        let { required, field, index, onValidate } = this.props;\n        let { value } = this.state;\n        //设置校验规则\n        let descriptor = {\n            [field]: { type: \"object\", required }\n        }\n        let validator = new schema(descriptor);\n        validator.validate({ [field]: value }, (errors, fields) => {\n            if (errors) {\n                this.setState({\n                    error: true\n                });\n            } else {\n                this.setState({\n                    error: false\n                });\n            }\n            onValidate && onValidate(field, fields, index);\n        });\n    }\n    render() {\n        let { value, error, flag } = this.state;\n\n        let { className, message, required } = this.props;\n\n        return (\n            <FieldWrap\n                required={required}\n                error={error}\n                message={message}\n                flag={flag}\n            >\n                <YearPicker\n                    className={className}\n                    value={value}\n                    onChange={this.handlerChange}\n                    format={'YYYY'}\n                    locale={zhCN}\n                    placeholder={this.props.intl.formatMessage({id:\"js.com.Row1.0002\", defaultMessage:\"选择年\"})}\n                />\n            </FieldWrap>\n        );\n    }\n}\n\nYearField.propTypes = propTypes;\nYearField.defaultProps = defaultProps;\nexport default YearField;","/**\n * RefDept (部门选择框)\n */\n\n//React导入\nimport { FormattedMessage, defineMessages, injectIntl, intlShape } from 'react-intl';\nimport React, { Component } from 'react';\n//类型校验\nimport PropTypes from 'prop-types';\n//验证组件 https://www.npmjs.com/package/async-validator\nimport schema from 'async-validator';\nimport FieldWrap from './FieldWrap'\n//部门参照组件\nimport { RefIuapDept } from 'components/RefViews';\n\n//自定义样式\nimport './style.less';\n\n//类型校验\nconst propTypes = {\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    className: PropTypes.string,\n    field: PropTypes.string,\n    index: PropTypes.number,\n    message: PropTypes.string,\n    data: PropTypes.array,\n    required: PropTypes.bool,\n    onValidate: PropTypes.func,\n    isFlag: PropTypes.bool,\n    validate: PropTypes.bool\n};\n//默认参数值\nconst defaultProps = {\n    field: '',\n    index: '',\n    message: <FormattedMessage id=\"js.com.Row3.0001\" defaultMessage=\"请选择部门参照\" />,\n    data: [],\n    required: false,\n    isFlag: false,\n    validate: false\n}\n\nclass RefDept extends Component {\n    /**\n     * Creates an instance of RefDept.\n     * @param {*} props\n     * @memberof RefDept\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.record.deptName ? JSON.stringify({\n                refpk: props.record.dept,\n                refname: props.record.deptName\n            }) : '',//处理兼容的参照数据\n            flag: false,//是否编辑过\n            error: false//校验是否有错误\n        }\n    }\n\n\n    /**\n     *  参数发生变化回调\n     *\n     * @param {object} nextProps 即将更新Props\n     * @param {object} nextState 即将更新State\n     * @memberof RefDept\n     */\n    componentWillReceiveProps(nextProps) {\n        //当校验外部发生变化，主动校验函数\n        if (nextProps.validate == true) {\n            this.validate();\n        }\n    }\n\n    /**\n     * 有输入值改变的回调\n     *\n     * @param {string} value\n     */\n    handlerChange = (value) => {\n        let { onChange, field, index, status } = this.props;\n        //处理是否有修改状态改变、状态同步之后校验输入是否正确\n        //处理参照不兼容字段\n        let _value = JSON.parse(value).refpk;\n        this.setState({ value, flag: status == 'edit' }, () => {\n            this.validate();\n        });\n        //回调外部函数\n        onChange && onChange(field, _value, index);\n    }\n    /**\n     * 校验方法\n     *\n     */\n    validate = () => {\n        let { required, field, index, onValidate } = this.props;\n        let { value } = this.state;\n        //设置校验规则\n        let descriptor = {\n            [field]: { type: \"string\", required, pattern: /[^({\"refname\":\"\",\"refpk\":\"\"}|{\"refpk\":\"\",\"refname\":\"\"})]/ }\n        }\n        let validator = new schema(descriptor);\n        validator.validate({ [field]: value }, (errors, fields) => {\n            if (errors) {\n                this.setState({\n                    error: true\n                });\n            } else {\n                this.setState({\n                    error: false\n                });\n            }\n            onValidate && onValidate(field, fields, index);\n        });\n    }\n    render() {\n        let { value, error, flag } = this.state;\n\n        let { className, message, required } = this.props;\n\n        return (\n            <FieldWrap\n                required={required}\n                error={error}\n                message={message}\n                flag={flag}\n            >\n                <RefIuapDept\n                    style={{ \"width\": \"100%\" }}\n                    className={className}\n                    value={value}\n                    onChange={this.handlerChange}\n                />\n            </FieldWrap>\n        );\n\n    }\n}\n\nRefDept.propTypes = propTypes;\nRefDept.defaultProps = defaultProps;\nexport default RefDept;","/**\n * RefLevel (职级选择框)\n */\n\n//React导入\nimport { FormattedMessage } from 'react-intl';\nimport React, { Component } from 'react';\n//类型校验\nimport PropTypes from 'prop-types';\n//验证组件 https://www.npmjs.com/package/async-validator\nimport schema from 'async-validator';\nimport FieldWrap from './FieldWrap'\n//参照组件职级\nimport { RefWalsinLevel } from 'components/RefViews';\n\n//自定义样式\nimport './style.less';\n\n//类型校验\nconst propTypes = {\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    className: PropTypes.string,\n    field: PropTypes.string,\n    index: PropTypes.number,\n    message: PropTypes.string,\n    data: PropTypes.array,\n    required: PropTypes.bool,\n    onValidate: PropTypes.func,\n    isFlag: PropTypes.bool,\n    validate: PropTypes.bool\n};\n\n//默认参数值\nconst defaultProps = {\n    field: '',\n    index: '',\n    message: <FormattedMessage id=\"js.com.Row6.0001\" defaultMessage=\"请选择职级参照\" />,\n    data: [],\n    required: false,\n    isFlag: false,\n    validate: false\n}\n\nclass RefLevel extends Component {\n    /**\n     * Creates an instance of RefLevel.\n     * @param {*} props\n     * @memberof RefLevel\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.record.levelName ? JSON.stringify({\n                refpk: props.record.postLevel,\n                refname: props.record.levelName\n            }) : '',//处理兼容的参照数据\n            flag: false,//是否编辑过\n            error: false//校验是否有错误\n        }\n    }\n\n    /**\n     *  参数发生变化回调\n     *\n     * @param {object} nextProps 即将更新Props\n     * @param {object} nextState 即将更新State\n     * @memberof NumberField\n     */\n    componentWillReceiveProps(nextProps) {\n        //当校验外部发生变化，主动校验函数\n        if (nextProps.validate == true) {\n            this.validate();\n        }\n    }\n\n    /**\n     * 有输入值改变的回调\n     *\n     * @param {string} value\n     */\n    handlerChange = (value) => {\n        let { onChange, field, index, status } = this.props;\n        //处理不兼容数据\n        let _value = JSON.parse(value).refpk;\n        this.setState({ value, flag: status == 'edit' }, () => {\n            this.validate();\n        });\n        //回调外部函数\n        onChange && onChange(field, _value, index);\n    }\n    /**\n     * 校验方法\n     *\n     */\n    validate = () => {\n        let { required, field, index, onValidate } = this.props;\n        let { value } = this.state;\n        //设置校验规则\n        let descriptor = {\n            [field]: { type: \"string\", required, pattern: /[^({\"refname\":\"\",\"refpk\":\"\"}|{\"refpk\":\"\",\"refname\":\"\"})]/ }\n        }\n        let validator = new schema(descriptor);\n        validator.validate({ [field]: value }, (errors, fields) => {\n            if (errors) {\n                this.setState({\n                    error: true\n                });\n            } else {\n                this.setState({\n                    error: false\n                });\n            }\n            onValidate && onValidate(field, fields, index);\n        });\n    }\n    render() {\n        let { value, error, flag } = this.state;\n\n        let { className, message, required } = this.props;\n\n        return (\n            <FieldWrap\n                required={required}\n                error={error}\n                message={message}\n                flag={flag}\n            >\n                <RefWalsinLevel\n                    style={{ \"width\": \"100%\" }}\n                    className={className}\n                    value={value}\n                    onChange={this.handlerChange}\n                />\n            </FieldWrap>\n        );\n    }\n}\n\nRefLevel.propTypes = propTypes;\nRefLevel.defaultProps = defaultProps;\nexport default RefLevel;","/**\n * mirrorx定义modal\n */\n\nimport { actions } from \"mirrorx\";\n// 引入services，如不需要接口请求可不写\nimport * as api from \"./service\";\n// 接口返回数据公共处理方法，根据具体需要\nimport { processData, success, Error } from \"utils\";\n\n\nexport default {\n    // 确定 Store 中的数据模型作用域\n    name: \"inlineEdit\",\n    // 设置当前 Model 所需的初始化 state\n    initialState: {\n        cacheData: [],//新增、修改缓存原始数据\n        tableData: [],//表格最终处理渲染的数据\n        selectData: [],//选中的状态数组\n        status: 'view',//表格状态：view=查看、edit=编辑、new=新增、del=删除\n        rowEditStatus: true,//操作拖拽列、宽开关\n        showLoading: false,\n        list: [],\n        totalPages: 1,\n        total: 0,\n        queryParam: {\n            pageParams: {\n                pageIndex: 0,\n                pageSize: 25\n            },\n            // groupParams: [],\n            whereParams: []\n        }\n    },\n    reducers: {\n        /**\n         * 纯函数，相当于 Redux 中的 Reducer，只负责对数据的更新。\n         * @param {object} state\n         * @param {object} data\n         */\n        updateState(state, data) { //更新state\n            return {\n                ...state,\n                ...data\n            };\n        }\n    },\n    effects: {\n        /**\n         * 加载列表数据\n         * @param {object} param\n         */\n        async loadList(param, getState) {\n            // 正在加载数据，显示加载 Loading 图标, 并初识化配置\n            actions.inlineEdit.updateState({\n                showLoading: true,\n                status: \"view\",\n                rowEditStatus: true,\n                selectData: []\n            });\n\n            const inlineEditState = getState().inlineEdit;\n            const _param = param || inlineEditState.queryParam;\n            // 调用 getList 请求数据\n\n            let {result} = processData(await api.getList(_param));\n            const {data:res}=result;\n            const defState = { showLoading: false }\n            let _state = null;\n            if (res) {\n                const { content: list, number, totalPages, totalElements: total } = res;\n\n                const pageIndex = number + 1;\n                _state = Object.assign({}, defState, {\n                    list,\n                    pageIndex,\n                    totalPages,\n                    total,\n                    queryParam: _param,\n                    cacheData: list\n                })\n            }else {\n                _state = defState\n            }\n            actions.inlineEdit.updateState(_state);\n        },\n        /**\n         * 批量添加数据\n         *\n         * @param {Array} [param=[]] 数组对象的数据\n         * @returns {bool} 操作是否成功\n         */\n        async adds(param, getState) {\n            actions.inlineEdit.updateState({ showLoading: true });\n            const mirState = getState();\n            const { localeData } = mirState.intl;\n            const msg = localeData['js.sin.src.0001'] || '保存成功';\n            let { result } = processData(await api.adds(param),msg);\n            const {status}=result;\n            actions.inlineEdit.updateState({ showLoading: false});\n            if (status === 'success') {\n                actions.inlineEdit.loadList();\n                return true;\n            } else {\n                return false;\n            }\n        },\n        /**\n         * 批量删除数据\n         *\n         * @param {Array} [param=[]]\n         */\n        async removes(param, getState) {\n            actions.inlineEdit.updateState({ showLoading: true });\n            const mirState = getState();\n            const { localeData } = mirState.intl;\n            const msg = localeData['js.sin.src.0002'] || '删除成功';\n            let { result } = processData(await api.removes(param),msg);\n            const {status}=result;\n            actions.inlineEdit.updateState({ showLoading: false });\n            if (status === 'success') {\n                const inlineEditState = getState().inlineEdit;\n                const { queryParam, list, totalPages } = inlineEditState;\n                // 调用 getList 请求数据\n\n                const { pageParams: { pageIndex } } = queryParam;\n                if (pageIndex > 0 && pageIndex + 1 === totalPages && param.length === list.length) {\n                    queryParam.pageParams.pageIndex = pageIndex - 1;\n                }\n\n                actions.inlineEdit.loadList(queryParam);\n                return true;\n            } else {\n                return false;\n            }\n        },\n        /**\n         * 批量删除数据\n         *\n         * @param {Array} [param=[]]\n         */\n        async updates(param, getState) {\n            actions.inlineEdit.updateState({ showLoading: true });\n            const mirState = getState();\n            const { localeData } = mirState.intl;\n            const msg = localeData['js.sin.src.0003'] || '更新成功';\n            let { result } = processData(await api.updates(param),msg);\n            const {status}=result;\n            actions.inlineEdit.updateState({ showLoading: false });\n            if (status === 'success') {\n                actions.inlineEdit.loadList();\n                return true;\n            } else {\n                return false;\n            }\n        },\n        resetData(status, getState) {\n            let cacheData = getState().inlineEdit.cacheData.slice();\n            cacheData.forEach(item => {\n                delete item._edit;\n            });\n            let state = {\n                list: cacheData\n            }\n            if (status) {\n                state.status = 'view';\n            }\n            actions.inlineEdit.updateState(state);\n        }\n    }\n};\n","/**\n * 业务组件工厂函数\n */\n\n\n//React所需导入\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\n\n//文本输入组件\nimport TextField from 'components/RowField/TextField';\n//下拉选择组件\nimport SelectField from 'components/RowField/SelectField';\n//数值选择组件\nimport NumberField from 'components/RowField/NumberField';\n//年份选择组件\nimport YearField from 'components/RowField/YearField';\n//参照部门\nimport RefDept from 'components/RowField/RefDept';\n//参照职级\nimport RefLevel from 'components/RowField/RefLevel';\n//日期组件\nimport DateField from 'components/RowField/DateField';\n\nconst renderComponentMap = {\n    name: {//姓名\n        component: TextField,\n        type: 'text'\n    },\n    sex: {//性别\n        component: SelectField,\n        selectList: [{\n            key: <FormattedMessage id=\"js.com.Ind2.0001\" defaultMessage=\"请选择\" />,\n            value: '',\n            disabled: true\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0002\" defaultMessage=\"男\" />,\n            value: 1\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0003\" defaultMessage=\"女\" />,\n            value: 0\n        }],\n        type: 'select'\n    },\n    serviceYears: {//工龄\n        component: NumberField,\n        props: {\n            iconStyle: 'one',\n            max: 99,\n            min: 0,\n            step: 1\n        },\n        type: 'number'\n    },\n    serviceYearsCompany: {//司龄\n        component: NumberField,\n        props: {\n            iconStyle: 'one',\n            max: 99,\n            min: 0,\n            step: 1\n        },\n        type: 'number'\n    },\n    month: {\n        component: SelectField,\n        selectList: [{//月份\n            key: <FormattedMessage id=\"js.com.Ind2.0001\" defaultMessage=\"请选择\" />,\n            value: \"\",\n            disabled: true\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0004\" defaultMessage=\"一月\" />,\n            value: 1\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0005\" defaultMessage=\"二月\" />,\n            value: 2\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0006\" defaultMessage=\"三月\" />,\n            value: 3\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0007\" defaultMessage=\"四月\" />,\n            value: 4\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0008\" defaultMessage=\"五月\" />,\n            value: 5\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0009\" defaultMessage=\"六月\" />,\n            value: 6\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0010\" defaultMessage=\"七月\" />,\n            value: 7\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0011\" defaultMessage=\"八月\" />,\n            value: 8\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0012\" defaultMessage=\"九月\" />,\n            value: 9\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0013\" defaultMessage=\"十月\" />,\n            value: 10\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0014\" defaultMessage=\"十一月\" />,\n            value: 11\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0015\" defaultMessage=\"十二月\" />,\n            value: 12\n        }],\n        type: 'select'\n    },\n    allowanceType: {//补助类别\n        component: SelectField,\n        selectList: [{\n            key: <FormattedMessage id=\"js.com.Ind2.0001\" defaultMessage=\"请选择\" />,\n            value: \"\",\n            disabled: true\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0016\" defaultMessage=\"电脑补助\" />,\n            value: 1\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0017\" defaultMessage=\"住宿补助\" />,\n            value: 2\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0018\" defaultMessage=\"交通补助\" />,\n            value: 3\n        }],\n        type: 'select'\n    },\n    allowanceStandard: { //补贴标准\n        component: NumberField,\n        props: {\n            max: 999999,\n            min: 0,\n            step: 1,\n            precision: 2\n        },\n        type: 'number'\n    },\n    allowanceActual: {//实际补贴\n        component: NumberField,\n        props: {\n            max: 999999,\n            min: 0,\n            step: 1,\n            precision: 2\n        },\n        type: 'number'\n    },\n    exdeeds: {//是否超标\n        component: SelectField,\n        selectList: [{\n            key: <FormattedMessage id=\"js.com.Ind2.0001\" defaultMessage=\"请选择\" />,\n            value: \"\",\n            disabled: true\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0019\" defaultMessage=\"未超标\" />,\n            value: 0\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0020\" defaultMessage=\"超标\" />,\n            value: 1\n        }],\n        type: 'select'\n    },\n    pickType: {//领取类别\n        component: SelectField,\n        selectList: [{\n            key: <FormattedMessage id=\"js.com.Ind2.0001\" defaultMessage=\"请选择\" />,\n            value: \"\",\n            disabled: true\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0021\" defaultMessage=\"转账\" />,\n            value: 1\n        }, {\n            key: <FormattedMessage id=\"js.com.Ind2.0022\" defaultMessage=\"现金\" />,\n            value: 2\n        }],\n        type: 'select'\n    },\n    remark: {//备注\n        component: TextField,\n        type: 'text'\n    },\n    year: {//年份\n        component: YearField,\n        type: 'dateYear'\n    },\n    date: {\n        component: DateField,\n        type: 'date'\n    },\n    dept: {//部门\n        component: RefDept,\n        type: 'ref',\n        valueKey: 'deptName'\n    },\n    level: {//职级\n        component: RefLevel,\n        type : 'ref',\n        valueKey: 'levelName'\n    }\n}\n\nclass FactoryComp extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    /**\n     * 渲染组件函数\n     *\n     * @returns JSX\n     */\n    renderComp = () => {\n        const { type, value, record } = this.props;\n        const renderMap = renderComponentMap[type];\n        if (renderMap) {\n            const { component: Com, type: comType, props } = renderMap;\n            const _props = props || {};\n            const { _edit, _status, _validate } = record;\n            let _value;\n            switch (comType) {\n                case 'dateYear':\n                case 'date':\n                case 'text': _value = value; break;\n                case 'number':\n                    if (props.precision && props.precision > 0) {\n                        _value = (typeof value) === 'number' ? value.toFixed(props.precision) : \"\"\n                    } else {\n                        _value = value\n                    }\n                    break;\n                case 'select':\n                    const { selectList } = renderMap;\n                    const selected = selectList.find(item => item.value === value);\n                    _value = selected ? selected.key : '';\n                    break;\n                case 'ref': _value = record[renderMap.valueKey]; break;\n                default: _value = ''; break;\n            }\n            return (\n                _edit ? (\n                    <Com\n                        status={_status}\n                        validate={_validate}\n                        {..._props}\n                        {...this.props}\n                        data={renderMap.selectList}\n                    />\n                ) : (\n                    <div>{_value}</div>\n                )\n            )\n        } else {\n            return (<div><FormattedMessage id=\"js.com.Ind2.0023\" defaultMessage=\"组件类型错误\" /></div>)\n        }\n\n\n    }\n    render() {\n        return (<div>\n            {this.renderComp()}\n        </div>);\n    }\n}\n\nexport default injectIntl(FactoryComp);\n","/**\n * A2单表行内编辑示例\n */\n\n//React组件\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\n//状态管理\nimport { actions } from 'mirrorx';\n//Tinper-bee 组件库\nimport { Loading, Message } from 'tinper-bee';\n//日期处理\nimport moment from 'moment'\n\n//工具类\nimport { uuid, deepClone, Error, Info, getButtonStatus, getHeight, getPageParam } from \"utils\";\n\n//Grid组件\nimport Grid from 'components/Grid';\n//布局类组件\nimport Header from 'components/Header';\n//项目级按钮\nimport Button from 'components/Button';\n//项目级提示框\nimport Alert from 'components/Alert';\n//按钮权限组件\nimport ButtonRoleGroup from 'components/ButtonRoleGroup';\n\n//搜索区组件\nimport SearchAreaForm from '../SearchArea';\n//行编辑组件工厂\nimport FactoryComp from './FactoryComp';\n\n//组件样式引用\n\nimport './index.less';\n\nclass IndexView extends Component {\n    /**\n     * Creates an instance of InlineEdit.\n     * @param {*} props\n     * @memberof InlineEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            tableHeight: 0,\n            showPop: false,//删除需要的状态\n            showPopCancel: false,//取消提示的状态\n            validate: false\n        }\n\n    }\n\n    formatMessage = this.props.intl.formatMessage;\n\n    //缓存数据\n    oldData = [];\n\n    //定义Grid的Column\n    column = [\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0001\", defaultMessage:\"员工编号\" }),\n            dataIndex: \"code\",\n            key: \"code\",\n            width: 150\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0002\", defaultMessage:\"员工姓名\"}),\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='name'//姓名业务组件类型\n                    value={text}//初始化值\n                    field='name'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0003\", defaultMessage:\"员工性别\" }),\n            dataIndex: \"sexEnumValue\",\n            key: \"sexEnumValue\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='sex'//性别业务组件类型\n                    value={record.sex}//初始化值\n                    field='sex'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0004\", defaultMessage:\"所属部门\" }),\n            dataIndex: \"deptName\",\n            key: \"deptName\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='dept'//性别业务组件类型\n                    field='dept'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0005\", defaultMessage:\"职级\" }),\n            dataIndex: \"levelName\",\n            key: \"levelName\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='level'//性别业务组件类型\n                    field='postLevel'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0006\", defaultMessage:\"工龄\"}),\n            dataIndex: \"serviceYears\",\n            key: \"serviceYears\",\n            width: 130,\n            className: 'column-number-right ', // 靠右对齐\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='serviceYears'//姓名业务组件类型\n                    value={text}//初始化值\n                    field='serviceYears'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0007\", defaultMessage:\"司龄\"}),\n            dataIndex: \"serviceYearsCompany\",\n            key: \"serviceYearsCompany\",\n            width: 130,\n            className: 'column-number-right ', // 靠右对齐\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='serviceYearsCompany'//姓名业务组件类型\n                    value={text}//初始化值\n                    field='serviceYearsCompany'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0008\", defaultMessage:\"年份\" }),\n            dataIndex: \"year\",\n            key: \"year\",\n            width: 100,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='year'//姓名业务组件类型\n                    value={text}//初始化值\n                    field='year'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0009\", defaultMessage:\"月份\"}),\n            dataIndex: \"monthEnumValue\",\n            key: \"monthEnumValue\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='month'//性别业务组件类型\n                    value={record.month}//初始化值\n                    field='month'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0010\", defaultMessage:\"补贴类别\" }),\n            dataIndex: \"allowanceTypeEnumValue\",\n            key: \"allowanceTypeEnumValue\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='allowanceType'//性别业务组件类型\n                    value={record.allowanceType}//初始化值\n                    field='allowanceType'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0011\", defaultMessage:\"补贴标准\"}),\n            dataIndex: \"allowanceStandard\",\n            key: \"allowanceStandard\",\n            width: 120,\n            className: 'column-number-right ', // 靠右对齐\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='allowanceStandard'//姓名业务组件类型\n                    value={text}//初始化值\n                    field='allowanceStandard'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0012\", defaultMessage:\"实际补贴\" }),\n            dataIndex: \"allowanceActual\",\n            key: \"allowanceActual\",\n            width: 120,\n            className: 'column-number-right ', // 靠右对齐\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='allowanceActual'//姓名业务组件类型\n                    value={text}//初始化值\n                    field='allowanceActual'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0013\", defaultMessage:\"是否超标\"}),\n            dataIndex: \"exdeedsEnumValue\",\n            key: \"exdeedsEnumValue\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='exdeeds'//姓名业务组件类型\n                    value={record.exdeeds}//初始化值\n                    field='exdeeds'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0014\", defaultMessage:\"申请时间\"}),\n            dataIndex: \"applyTime\",\n            key: \"applyTime\",\n            width: 200,\n            render: (text, record, index) => {\n                if (text !== \"\" && (typeof text !== 'undefined')) {\n                    return <div>{moment(text).format('YYYY-MM-DD hh:mm:ss')}</div>\n                } else {\n                    return <div></div>\n                }\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0015\", defaultMessage:\"领取方式\"}),\n            dataIndex: \"pickTypeEnumValue\",\n            key: \"pickTypeEnumValue\",\n            width: 120,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='pickType'//姓名业务组件类型\n                    value={record.pickType}//初始化值\n                    field='pickType'//修改的字段\n                    index={index}//字段的行号\n                    required={true}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0016\", defaultMessage:\"领取时间\"}),\n            dataIndex: \"pickTime\",\n            key: \"pickTime\",\n            width: 200,\n            render: (text, record, index) => {\n                if (text !== \"\" && (typeof text !== 'undefined')) {\n                    return <div>{moment(text).format('YYYY-MM-DD hh:mm:ss')}</div>\n                } else {\n                    return <div></div>\n                }\n            }\n        },\n        {\n            title: this.formatMessage({id:\"js.com.Ind1.0017\", defaultMessage:\"备注\"}),\n            dataIndex: \"remark\",\n            key: \"remark\",\n            width: 100,\n            render: (text, record, index) => {\n                return <FactoryComp\n                    type='remark'//姓名业务组件类型\n                    value={text}//初始化值\n                    field='remark'//修改的字段\n                    index={index}//字段的行号\n                    required={false}//必输项\n                    record={record}//记录集用于多字段处理\n                    onChange={this.changeAllData}//回调函数\n                    onValidate={this.onValidate}//校验的回调\n                />\n            }\n        }\n    ];\n    componentWillMount() {\n        //计算表格滚动条高度\n        this.resetTableHeight(true);\n    }\n    /**\n     * 渲染后执行的函数\n     *\n     * @memberof InlineEdit\n     */\n    componentDidMount() {\n        //生命周期加载数据\n        actions.inlineEdit.loadList(this.props.queryParam);//初始化Grid数据\n    }\n    /**\n     * 同步修改后的数据不操作State\n     *\n     * @param {string} field 字段\n     * @param {any} value 值\n     * @param {number} index 位置\n     */\n    changeAllData = (field, value, index) => {\n        let oldData = this.oldData;\n        let _sourseData = deepClone(this.props.list);\n        oldData[index][field] = value;\n        //有字段修改后去同步左侧对号checkbox\n        if (!_sourseData[index]['_checked']) {\n            _sourseData[index]['_checked'] = true;\n            actions.inlineEdit.updateState({ list: _sourseData });\n        }\n        oldData[index]['_checked'] = true;\n        this.oldData = oldData;\n    }\n\n    /**\n     * 处理验证后的状态\n     *\n     * @param {string} field 校验字段\n     * @param {objet} flag 是否有错误\n     * @param {number} index 位置\n     */\n    onValidate = (field, flag, index) => {\n        //只要是修改过就启用校验\n        if (this.oldData.length > 0) {\n            this.oldData[index][`_${field}Validate`] = (flag == null);\n        }\n\n    }\n\n    /**\n     * 点击多选框回调函数\n     *\n     * @param {object} selectData 选择的数据\n     * @param {object} record 当前行数据，空为点击全选\n     * @param {number} index 当前索引\n     */\n    getSelectedDataFunc = (selectData, record, index) => {\n        let { list } = this.props;\n        let _list = deepClone(list);\n        //当第一次没有同步数据\n        // if (this.oldData.length == 0) {\n        //     this.oldData = deepClone(list);\n        // }\n        //同步list数据状态\n        if (index != undefined) {\n            _list[index]['_checked'] = !_list[index]['_checked'];\n        } else {//点击了全选\n            if (selectData.length > 0) {//全选\n                _list.map(item => {\n                    if (!item['_disabled']) {\n                        item['_checked'] = true\n                    }\n                });\n            } else {//反选\n                _list.map(item => {\n                    if (!item['_disabled']) {\n                        item['_checked'] = false\n                    }\n                });\n            }\n        }\n        actions.inlineEdit.updateState({ selectData, list: _list });\n    }\n    /**\n     * 跳转指定页码\n     *\n     * @param {*} pageIndex\n     */\n    freshData = (pageIndex) => {\n        this.onPageSelect(pageIndex, 0);\n    }\n\n    /**\n     * 分页  跳转指定页数和设置一页数据条数\n     *\n     * @param {*} index\n     * @param {*} value\n     */\n    onDataNumSelect = (index, value) => {\n        this.onPageSelect(value, 1);\n    }\n\n    /**\n     * type为0标识为pageIndex,为1标识pageSize\n     *\n     * @param {*} value\n     * @param {*} type\n     */\n    onPageSelect = (value, type) => {\n        let queryParam = deepClone(this.props.queryParam); // 深拷贝查询条件从action里\n        const { pageIndex, pageSize } = getPageParam(value, type, queryParam.pageParams);\n        queryParam['pageParams'] = { pageIndex, pageSize };\n        actions.inlineEdit.updateState(queryParam); // 更新action queryParam\n        actions.inlineEdit.loadList(queryParam);\n    }\n    /**\n     * 过滤数组中的非法null\n     *\n     * @param {array} arr\n     */\n    filterArrayNull = (arr) => {\n        return arr.filter(item => (item != null));\n    }\n    /**\n     * 检查是否可选状态\n     *\n     */\n    hasCheck = () => {\n        let { selectData, list } = this.props;\n        let flag = false;\n        selectData.forEach(item => {\n            if (item._checked == true) {\n                flag = true;\n            }\n        });\n        list.forEach(item => {\n            if (item._checked == true) {\n                flag = true;\n            }\n        });\n        return flag\n    }\n\n    //新增数据模版\n    newDataTmp = {\n        _edit: true,\n        _isNew: true,\n        _checked: false,\n        _disabled: false,\n        _flag: false,\n        code: '',\n        name: '',\n        sex: '',\n        sexEnumValue: '',\n        deptName: '',\n        levelName: '',\n        serviceYears: 0,\n        serviceYearsCompany: 0,\n        year: moment().format('YYYY'),\n        month: '',\n        monthEnumValue: '',\n        allowanceType: '',\n        allowanceTypeEnumValue: '',\n        allowanceStandard: 0,\n        allowanceActual: 0,\n        exdeeds: '',\n        exdeedsEnumValue: '',\n        // applyTime: moment(),\n        pickType: '',\n        pickTypeEnumValue: '',\n        // pickTime: moment(),\n        remark: ''\n    }\n\n    /**\n     * 新增行数据\n     */\n    handlerNew = () => {\n        let newData = deepClone(this.props.list);//克隆原始数据\n        //这里是新增后的新数据模板，用于默认值\n        let tmp = {\n            key: uuid(),\n            ...this.newDataTmp\n        }\n\n        //当第一次新增的时候\n        // 禁用其他checked\n        //重置表头状态\n        if (this.oldData.length <= 0) {\n            newData.forEach(item => {\n                item['_disabled'] = true;\n                item['_checked'] = false;\n            })\n            this.grid.resetColumns(this.column);\n        }\n\n        this.oldData.unshift(tmp);//插入到最前\n        newData.unshift(tmp);\n\n        //保存处理后的数据，并且切换操作态'新增'\n        actions.inlineEdit.updateState({ list: newData, status: \"new\", rowEditStatus: false, selectData: [] });\n    }\n\n    /**\n     * 修改\n     */\n    onClickUpdate = () => {\n        //当前行数据设置编辑态\n        let editData = this.props.list.map(item => {\n            item['_edit'] = true;\n            item['_checked'] = false;\n            item['_status'] = 'edit';\n            return item\n        });\n\n        //重置操作栏位\n        this.grid.resetColumns(this.column);\n        //同步操作数据\n        this.oldData = deepClone(editData);\n        //保存处理后的数据，并且切换操作态'编辑'\n        actions.inlineEdit.updateState({ list: editData, status: \"edit\", rowEditStatus: false });\n    }\n\n    /**\n     * 下载模板\n     *\n     */\n    onClickDownloadTemplate = () => {\n        window.open(`${GROBAL_HTTP_CTX}/inline_allowances/excelTemplateDownload`);\n    }\n\n\n    /**\n     * 根据key关联对应数据后校验\n     *\n     * @param {array} data 要关联数据\n     * @param {array} list 被关联数据\n     * @returns\n     */\n    filterList = (data, list, key) => {\n        let newList = list.slice();\n        let selectList = []\n        data.forEach((_data) => {\n            newList.forEach((item, i) => {\n                if (_data[key] === item[key] && item['_checked']) {\n                    item['_validate'] = true;\n                    selectList.push(_data)\n                }\n            });\n        });\n        return {\n            newList,\n            selectList\n        };\n    }\n    /**\n     * 验证数据否正确\n     *\n     * @param {array} data 欲验证的数据\n     * @returns {bool}\n     */\n    isVerifyData = (data) => {\n        let flag = true;\n        let pattern = /Validate\\b/;//校验的正则结尾\n\n\n        data.forEach((item, index) => {\n            let keys = Object.keys(item);\n            //如果标准为false直接不参与计算说明已经出现了错误\n            if (flag) {\n                for (let i = 0; i < keys.length; i++) {\n                    if (pattern.test(keys[i])) {\n                        if (data[index][keys[i]]) {\n                            flag = true;\n                        } else {\n                            flag = false;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return flag\n    }\n\n    /**\n     * 保存\n     */\n    onClickSave = async () => {\n        let {status, list, intl} = this.props;\n        let filterResult = null;\n        let ajaxFun = null;\n        let msg = intl.formatMessage({id:\"js.com.Ind1.0018\", defaultMessage:\"请勾选数据后再新增\"});\n        switch (status) {\n            case 'new':\n                filterResult = this.filterList(this.oldData, list, 'key');\n                ajaxFun = actions.inlineEdit.adds;\n                break;\n            case 'edit':\n                filterResult = this.filterList(this.oldData, list, 'id');\n                ajaxFun = actions.inlineEdit.updates;\n                msg = intl.formatMessage({id:\"js.com.Ind1.0019\", defaultMessage:\"请勾选数据后再更新\" });\n                break;\n            default:\n                break;\n        }\n\n        if (filterResult.selectList.length > 0) {\n            //开始校验actions\n            await actions.inlineEdit.updateState({list: filterResult.newList});\n            //检查是否验证通过\n            if (this.isVerifyData(filterResult.selectList)) {\n\n                let newResult = await ajaxFun(filterResult.selectList);\n                if (newResult) {\n                    this.oldData = [];\n                }\n            } else {\n                Info(intl.formatMessage({id:\"js.com.Ind1.0020\", defaultMessage:\"数据填写不完整\"}))\n            }\n        } else {\n            Info(msg);\n        }\n    }\n    /**\n     * 删除询问Pop\n     *\n     */\n    onClickDelConfirm = () => {\n        let { selectData, intl } = this.props;\n        if (selectData.length > 0) {\n            this.setState({\n                showPop: true\n            });\n        } else {\n            Info(intl.formatMessage({id:\"js.com.Ind1.0021\", defaultMessage:\"请勾选数据后再删除\"}));\n        }\n    }\n    /**\n     * 删除\n     */\n    onClickDel = async () => {\n        let { selectData } = this.props;\n        let delResult = await actions.inlineEdit.removes(selectData);\n        if (delResult) {\n            this.oldData = [];\n        }\n        this.setState({\n            showPop: false\n        });\n    }\n\n    /**\n     * 取消\n     *\n     */\n    onClickPopCancel = () => {\n        this.setState({\n            showPop: false\n        });\n    }\n    /**\n     * 表格内的取消\n     */\n    onClickCancel = () => {\n        //检查是否有修改过的选中\n        if (this.hasCheck()) {\n            this.setState({ showPopCancel: true });\n        } else {\n            this.oldData = [];//清空上一次结果\n            //重置store内的数据\n            actions.inlineEdit.resetData(true);\n            //清空选中的数据\n            actions.inlineEdit.updateState({ selectData: [], rowEditStatus: true });\n        }\n    }\n    /**\n     *  新增或修改给出的确定\n     *\n     */\n    onClickPopUnSaveOK = () => {\n        //重置store内的数据\n        actions.inlineEdit.resetData(true);\n        //清空选中的数据\n        actions.inlineEdit.updateState({ selectData: [], rowEditStatus: true });\n        this.setState({ showPopCancel: false });\n        this.oldData = [];\n    }\n    /**\n     *  新增或修改给出的取消\n     *\n     */\n    onClickPopUnSaveCancel = () => {\n        this.setState({ showPopCancel: false });\n    }\n    /**\n     * 导出数据\n     *\n     */\n    onClickExport = () => {\n        this.grid.exportExcel();\n    }\n\n\n    /**\n     * 重置表格高度计算回调\n     *\n     * @param {bool} isopen 是否展开\n     */\n    resetTableHeight = (isopen) => {\n        let tableHeight = 0;\n        if (isopen) {\n            //展开的时候并且适配对应页面数值px\n            tableHeight = getHeight() - 420\n        } else {\n            //收起的时候并且适配对应页面数值px\n            tableHeight = getHeight() - 270\n        }\n        this.setState({ tableHeight });\n    }\n\n    render() {\n        const _this = this;\n        let { showPop, showPopCancel, tableHeight } = _this.state;\n        let { list, showLoading, pageIndex, pageSize, totalPages, total, status, rowEditStatus, queryParam } = _this.props;\n        //分页条数据\n        const paginationObj = {\n            activePage: pageIndex,//当前页\n            total: total,//总条数\n            items: totalPages,\n            freshData: _this.freshData,//刷新数据\n            onDataNumSelect: _this.onDataNumSelect,//选择记录行\n            disabled: status !== \"view\"//分页条禁用状态\n        }\n        return (\n            <div className='inline-edit'>\n                <Header title={this.props.intl.formatMessage({id:\"js.com.Ind1.0022\", defaultMessage:\"A2单表行内编辑示例\"})} />\n                <SearchAreaForm\n                    queryParam={queryParam}\n                    status={status}\n                    pageSize={pageSize}\n                    searchOpen={true}\n                    onCallback={this.resetTableHeight}\n                />\n                <div className='table-header'>\n                    <ButtonRoleGroup\n                        funcCode=\"singletable-inlineEdit\"\n                    >\n                        <Button role=\"add\"\n                            disabled={getButtonStatus('add', status)}\n                            className=\"ml8\"\n                            colors=\"primary\"\n                            onClick={this.handlerNew}\n                        >\n                            <FormattedMessage id=\"js.com.Ind1.0024\" defaultMessage=\"新增\" />\n                        </Button>\n                        <Button\n                            role=\"update\"\n                            shape=\"border\"\n                            disabled={getButtonStatus('edit', status)}\n                            className=\"ml8\"\n                            onClick={this.onClickUpdate}\n                        >\n                            <FormattedMessage id=\"js.com.Ind1.0025\" defaultMessage=\"修改\" />\n                        </Button>\n                        <Button\n                            role=\"delete\"\n                            shape=\"border\"\n                            disabled={getButtonStatus('del', status)}\n                            className=\"ml8\"\n                            onClick={this.onClickDelConfirm}\n                        >\n                            <FormattedMessage id=\"js.com.Ind1.0026\" defaultMessage=\"删除\" />\n                          </Button>\n                        {/*<Button*/}\n                            {/*shape=\"border\"*/}\n                            {/*disabled={getButtonStatus('down', status)}*/}\n                            {/*className=\"ml8\"*/}\n                            {/*onClick={this.onClickDownloadTemplate}*/}\n                        {/*>*/}\n                            {/*下载模板*/}\n                        {/*</Button>*/}\n                        {/*<Button*/}\n                            {/*shape=\"border\"*/}\n                            {/*disabled={getButtonStatus('import', status)}*/}\n                            {/*className=\"ml8\"*/}\n                        {/*>*/}\n                            {/*导入*/}\n                        {/*</Button>*/}\n                        <Button\n                            shape=\"border\"\n                            disabled={getButtonStatus('export', status)}\n                            className=\"ml8\"\n                            onClick={this.onClickExport}\n                        >\n                            <FormattedMessage id=\"js.com.Ind1.0027\" defaultMessage=\"导出\" />\n                        </Button>\n                        <Button\n                            shape=\"border\"\n                            disabled={getButtonStatus('save', status)}\n                            className=\"ml8\"\n                            onClick={this.onClickSave}\n                        >\n                            <FormattedMessage id=\"js.com.Ind1.0028\" defaultMessage=\"保存\" />\n                        </Button>\n                        <Button\n                            shape=\"border\"\n                            disabled={getButtonStatus('cancel', status)}\n                            className=\"ml8\"\n                            onClick={this.onClickCancel}\n                        >\n                            <FormattedMessage id=\"js.com.Ind1.0029\" defaultMessage=\"取消\" />\n                        </Button>\n                        <Alert\n                            show={showPopCancel}\n                            context={<FormattedMessage id=\"js.com.Ind1.0030\" defaultMessage=\"数据未保存，确定离开 ?\" />}\n                            confirmFn={this.onClickPopUnSaveOK}\n                            cancelFn={this.onClickPopUnSaveCancel}\n                        />\n                    </ButtonRoleGroup>\n                </div>\n                <div className='grid-parent'>\n                    <Grid\n                        ref={(el) => this.grid = el}//ref用于调用内部方法\n                        data={list}//数据\n                        rowKey={r => r.id ? r.id : r.key}\n                        columns={this.column}//定义列\n                        paginationObj={paginationObj}//分页数据\n                        columnFilterAble={rowEditStatus}//是否显示右侧隐藏行\n                        showHeaderMenu={rowEditStatus}//是否显示菜单\n                        dragborder={rowEditStatus}//是否调整列宽\n                        draggable={rowEditStatus}//是否拖拽\n                        syncHover={rowEditStatus}//是否同步状态\n                        getSelectedDataFunc={this.getSelectedDataFunc}//选择数据后的回调\n                        scroll={{ y: tableHeight }}\n                    />\n                </div>\n\n                <Alert\n                    show={showPop}\n                    context={<FormattedMessage id=\"js.com.Ind1.0031\" defaultMessage=\"是否要删除?\" />}\n                    confirmFn={this.onClickDel}\n                    cancelFn={this.onClickPopCancel}\n                />\n\n                <Loading fullScreen={true} show={showLoading} />\n            </div>\n        )\n    }\n}\n\nexport default injectIntl(IndexView);\n","/**\n * request服务请求类\n */\n\nimport request from \"utils/request\";\nimport axios from \"axios\";\nimport { deepClone } from 'utils';\n//定义接口地址\nconst URL = {\n    \"GET_LIST\": `${GROBAL_HTTP_CTX}/inline_allowances/list`,\n    \"GET_ADD\": `${GROBAL_HTTP_CTX}/inline_allowances/saveMultiple`,\n    \"GET_UPDATE\": `${GROBAL_HTTP_CTX}/inline_allowances/updateMultiple`,\n    \"GET_DELETE\": `${GROBAL_HTTP_CTX}/inline_allowances/deleteBatch`,\n    \"GET_LIST_BY_COL\": `${GROBAL_HTTP_CTX}/inline_allowances/listByColumn`,\n    \"GET_TOEXPORTEXCEL\": `${GROBAL_HTTP_CTX}/inline_allowances/toExportExcel`\n}\n\n/**\n * 获取列表\n * @param {*} params\n */\nexport const getList = (param) => {\n    let newParam = Object.assign({}, param),\n        pageParams = deepClone(newParam.pageParams);\n    delete newParam.pageParams;\n\n    return request(URL.GET_LIST, {\n        method: \"post\",\n        data: newParam,\n        param: pageParams\n    });\n}\n\n/**\n * 添加数据\n * @param {Array} data 数组对象批量添加\n * @returns {Promise}\n */\nexport const adds = (data) => {\n    return request(URL.GET_ADD, {\n        method: \"post\",\n        data\n    });\n}\n\n/**\n * 删除数据\n * @param {Array} data 数组对象批量删除ids\n * @returns {Promise}\n */\nexport const removes = (data) => {\n    return request(URL.GET_DELETE, {\n        method: \"post\",\n        data\n    });\n}\n\n/**\n * 修改数据\n * @param {Array} data 数组对象批量修改id+ts\n * @returns {Promise}\n */\nexport const updates = (data) => {\n    return request(URL.GET_UPDATE, {\n        method: \"post\",\n        data\n    });\n}\n\n/**\n * 获取行过滤的下拉数据\n *   @param {*} params\n */\nexport const getListByCol = (param) => {\n    return request(URL.GET_LIST_BY_COL, {\n        method: \"get\",\n        param\n    });\n}\n\n\n\nconst selfURL = window[window.webkitURL ? 'webkitURL' : 'URL'];\nlet exportData = (url, data) => {\n    axios({\n        method: 'post',\n        url: url,\n        data: data,\n        responseType: 'blob'\n    }).then((res) => {\n        const content = res.data;\n        const blob = new Blob([content]);\n        const fileName = \"导出数据.xls\";\n\n        let elink = document.createElement('a');\n        if ('download' in elink) {\n            elink.download = fileName;\n            elink.style.display = 'none';\n            elink.href = selfURL['createObjectURL'](blob);\n            document.body.appendChild(elink);\n\n            // 触发链接\n            elink.click();\n            selfURL.revokeObjectURL(elink.href);\n            document.body.removeChild(elink)\n        } else {\n            navigator.msSaveBlob(blob, fileName);\n        }\n    })\n}","import React from 'react';\nimport mirror, {connect} from 'mirrorx';\n\n// 组件引入\nimport IndexView from './components/IndexView'\n// 数据模型引入\nimport model from './model'\n\nmirror.model(model);\n\n// 数据和组件UI关联、绑定\nexport default connect(state => state.inlineEdit, null)(IndexView);","/**\n * 整个应用的入口，包含路由，数据管理加载\n */\nimport  \"babel-polyfill\"\nimport React  from \"react\";\nimport { render } from \"mirrorx\";\nimport AppContainer from './container'\nimport Intl from 'components/Intl'\nimport \"./app.less\";\n\nrender(\n  <Intl>\n    <AppContainer/>\n  </Intl>\n  , document.querySelector(\"#app\"));\n"],"sourceRoot":""}